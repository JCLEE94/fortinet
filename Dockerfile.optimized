# =============================================================================
# FortiGate Nextrade - Optimized Production Dockerfile
# Multi-stage build with minimal final image size
# =============================================================================

# Stage 1: Python dependencies builder
FROM python:3.11-slim as builder

ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

WORKDIR /build

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    python3-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy and install Python dependencies
COPY requirements.txt .
RUN pip install --user --no-cache-dir -r requirements.txt

# Stage 2: Final minimal image
FROM python:3.11-slim

# GitOps metadata
ARG GIT_COMMIT
ARG VERSION
ARG BUILD_DATE

ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONPATH=/app/src \
    APP_MODE=production \
    WEB_APP_HOST=0.0.0.0 \
    WEB_APP_PORT=7777 \
    GIT_COMMIT=${GIT_COMMIT} \
    VERSION=${VERSION} \
    BUILD_DATE=${BUILD_DATE}

# Labels for GitOps tracking
LABEL maintainer="FortiGate Nextrade Team" \
      version="${VERSION}" \
      description="FortiGate Nextrade - Optimized" \
      git-commit="${GIT_COMMIT}" \
      build-date="${BUILD_DATE}"

WORKDIR /app

# Create non-root user
RUN groupadd -r fortinet && useradd -r -g fortinet fortinet

# Install minimal runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy Python packages from builder
COPY --from=builder --chown=fortinet:fortinet /root/.local /home/fortinet/.local

# Copy application code
COPY --chown=fortinet:fortinet src/ /app/src/
COPY --chown=fortinet:fortinet config/ /app/config/
COPY --chown=fortinet:fortinet data/ /app/data/
COPY --chown=fortinet:fortinet start.sh /app/

# Make start script executable
RUN chmod +x /app/start.sh

# Switch to non-root user
USER fortinet

# Add local pip packages to PATH
ENV PATH=/home/fortinet/.local/bin:$PATH

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:${WEB_APP_PORT}/api/health || exit 1

EXPOSE ${WEB_APP_PORT}

CMD ["/app/start.sh"]
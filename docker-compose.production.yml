version: '3.8'

services:
  # PostgreSQL Database Service
  postgresql:
    image: registry.jclee.me/fortinet-postgresql:latest
    container_name: fortinet-postgresql
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      POSTGRES_DB: fortinet
      POSTGRES_USER: fortinet
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-fortinet123}
      POSTGRES_INIT_DB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
      TZ: Asia/Seoul
      PGTZ: Asia/Seoul
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgresql/init:/docker-entrypoint-initdb.d:ro
    ports:
      - "5432:5432"
    networks:
      - fortinet-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fortinet -d fortinet"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis Cache Service
  redis:
    image: registry.jclee.me/fortinet-redis:latest
    container_name: fortinet-redis
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      TZ: Asia/Seoul
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    ports:
      - "6379:6379"
    networks:
      - fortinet-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Main FortiGate Application
  fortinet:
    image: registry.jclee.me/fortinet:latest
    container_name: fortinet-app
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      - "traefik.http.routers.fortinet.rule=Host(`fortinet.jclee.me`)"
      - "traefik.http.routers.fortinet.entrypoints=websecure"
      - "traefik.http.routers.fortinet.tls.certresolver=letsencrypt"
      - "traefik.http.services.fortinet.loadbalancer.server.port=7777"
    depends_on:
      redis:
        condition: service_healthy
      postgresql:
        condition: service_healthy
    environment:
      # Application Settings
      APP_MODE: ${APP_MODE:-production}
      OFFLINE_MODE: ${OFFLINE_MODE:-false}
      WEB_APP_PORT: 7777
      SECRET_KEY: ${SECRET_KEY}
      TZ: Asia/Seoul
      
      # Database Configuration
      DATABASE_URL: postgresql://fortinet:${POSTGRES_PASSWORD:-fortinet123}@postgresql:5432/fortinet
      POSTGRES_HOST: postgresql
      POSTGRES_PORT: 5432
      POSTGRES_DB: fortinet
      POSTGRES_USER: fortinet
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-fortinet123}
      
      # Redis Configuration
      REDIS_URL: redis://redis:6379/0
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      
      # FortiGate/FortiManager Configuration
      FORTIGATE_HOST: ${FORTIGATE_HOST}
      FORTIGATE_API_KEY: ${FORTIGATE_API_KEY}
      FORTIMANAGER_HOST: ${FORTIMANAGER_HOST}
      FORTIMANAGER_API_KEY: ${FORTIMANAGER_API_KEY}
      
      # ITSM Configuration
      ITSM_BASE_URL: ${ITSM_BASE_URL}
      ITSM_API_KEY: ${ITSM_API_KEY}
      
      # MSA Service URLs (if using microservices)
      CONSUL_URL: ${CONSUL_URL:-http://consul:8500}
      KONG_ADMIN_URL: ${KONG_ADMIN_URL:-http://kong:8001}
      RABBITMQ_URL: ${RABBITMQ_URL:-amqp://guest:guest@rabbitmq:5672}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config:/app/config:ro
    ports:
      - "7777:7777"
    networks:
      - fortinet-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7777/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  # Traefik Reverse Proxy (Optional - for production deployment)
  traefik:
    image: traefik:v2.10
    container_name: fortinet-traefik
    restart: unless-stopped
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL:-admin@jclee.me}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_letsencrypt:/letsencrypt
    networks:
      - fortinet-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.fortinet.jclee.me`)"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"

networks:
  fortinet-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  traefik_letsencrypt:
    driver: local
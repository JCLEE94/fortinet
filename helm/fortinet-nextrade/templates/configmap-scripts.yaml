{{- if .Values.scripts.enabled -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "fortinet-nextrade.fullname" . }}-scripts
  labels:
    {{- include "fortinet-nextrade.labels" . | nindent 4 }}
data:
  entrypoint.sh: |
    #!/bin/bash
    set -e
    
    echo "Starting FortiGate Nextrade..."
    echo "App Mode: $APP_MODE"
    echo "Web Port: $WEB_APP_PORT"
    echo "Offline Mode: $OFFLINE_MODE"
    
    # Ensure directories exist
    mkdir -p /app/data /app/logs
    
    # Set permissions
    chmod -R 755 /app/data /app/logs
    
    # Start the application
    cd /app/src
    exec python main.py --web
    
  healthcheck.sh: |
    #!/bin/bash
    
    # Health check script for FortiGate Nextrade
    response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:${WEB_APP_PORT:-7777}/api/health)
    
    if [ "$response" = "200" ]; then
        echo "Health check passed"
        exit 0
    else
        echo "Health check failed with status: $response"
        exit 1
    fi
    
  backup.sh: |
    #!/bin/bash
    
    # Backup script for FortiGate Nextrade data
    BACKUP_DIR="/app/data/backups"
    TIMESTAMP=$(date +%Y%m%d_%H%M%S)
    
    mkdir -p "$BACKUP_DIR"
    
    echo "Creating backup at $TIMESTAMP..."
    tar -czf "$BACKUP_DIR/backup_$TIMESTAMP.tar.gz" \
        --exclude="$BACKUP_DIR" \
        /app/data
    
    echo "Backup completed: backup_$TIMESTAMP.tar.gz"
    
    # Keep only last 5 backups
    cd "$BACKUP_DIR"
    ls -t backup_*.tar.gz | tail -n +6 | xargs -r rm
{{- end }}
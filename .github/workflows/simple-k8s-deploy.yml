name: Simple K8s Auto Deploy

on:
  push:
    branches: [ main, master ]

env:
  REGISTRY: registry.jclee.me
  IMAGE_NAME: fortinet
  K8S_NAMESPACE: fortinet

jobs:
  deploy:
    name: üöÄ Auto Deploy to K8s
    runs-on: self-hosted
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
    
    - name: üîê Configure kubectl
      run: |
        # Setup kubeconfig
        export KUBECONFIG=/tmp/kubeconfig-${{ github.run_id }}
        echo "${{ secrets.KUBECONFIG }}" | base64 -d > $KUBECONFIG
        chmod 600 $KUBECONFIG
        
        # Test connection
        kubectl version --client
        kubectl get nodes
    
    - name: üöÄ Deploy to Kubernetes
      run: |
        echo "üöÄ Deploying to Kubernetes..."
        export KUBECONFIG=/tmp/kubeconfig-${{ github.run_id }}
        
        # Update deployment with new image
        kubectl set image deployment/fortinet \
          fortinet=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
          -n ${{ env.K8S_NAMESPACE }} \
          --record=true
        
        # Force rollout restart to pull latest image
        kubectl rollout restart deployment/fortinet -n ${{ env.K8S_NAMESPACE }}
        
        # Wait for rollout completion
        kubectl rollout status deployment/fortinet -n ${{ env.K8S_NAMESPACE }} --timeout=300s
        
        echo "‚úÖ Deployment completed!"
    
    - name: üè• Verify Deployment
      run: |
        echo "üè• Verifying deployment..."
        export KUBECONFIG=/tmp/kubeconfig-${{ github.run_id }}
        
        # Check pod status
        kubectl get pods -n ${{ env.K8S_NAMESPACE }} -l app=fortinet
        
        # Wait for service to be ready
        sleep 30
        
        # Check health endpoint
        for i in {1..10}; do
          HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" https://fortinet.jclee.me/api/health || echo "000")
          
          if [ "$HTTP_CODE" = "200" ]; then
            echo "‚úÖ Health check passed!"
            break
          else
            echo "‚è≥ Health check attempt $i failed (HTTP $HTTP_CODE), retrying..."
            sleep 10
          fi
        done
    
    - name: üßπ Cleanup
      if: always()
      run: |
        # Remove temporary kubeconfig
        rm -f /tmp/kubeconfig-${{ github.run_id }}
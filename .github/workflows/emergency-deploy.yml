name: Emergency Deploy

on:
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for emergency deployment'
        required: true
      skip_tests:
        description: 'Skip tests (use with caution)'
        required: false
        default: 'false'

env:
  REGISTRY: 'registry.jclee.me'
  IMAGE_NAME: 'fortinet'

jobs:
  emergency-deploy:
    name: 🚨 Emergency Deploy
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4
      
    - name: 📝 Log Emergency Deploy
      run: |
        echo "🚨 EMERGENCY DEPLOYMENT INITIATED"
        echo "Reason: ${{ github.event.inputs.reason }}"
        echo "Actor: ${{ github.actor }}"
        echo "Time: $(date -u +%Y-%m-%dT%H:%M:%SZ)"
        
    - name: 🧪 Quick Test
      if: github.event.inputs.skip_tests != 'true'
      run: |
        echo "Running minimal tests..."
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        cd src && python -m pytest ../tests/test_health.py -v || true
        
    - name: 🏗️ Build Image
      run: |
        echo "Building Docker image..."
        docker build -f Dockerfile.production \
          -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:emergency-${{ github.sha }} \
          -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest .
          
    - name: 🔐 Registry Login
      run: |
        echo "${{ secrets.REGISTRY_PASSWORD }}" | \
          docker login ${{ env.REGISTRY }} \
          -u ${{ secrets.REGISTRY_USERNAME }} --password-stdin
          
    - name: 📤 Push Image
      run: |
        docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:emergency-${{ github.sha }}
        docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        
    - name: ☸️ Trigger Deployment
      run: |
        echo "☸️ Emergency deployment to Kubernetes..."
        
        # K8s deployment (if kubectl available)
        if command -v kubectl &> /dev/null; then
          kubectl set image deployment/fortinet-app \
            fortinet=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:emergency-${{ github.sha }} \
            -n fortinet || echo "K8s deployment failed - manual intervention required"
        else
          echo "⚠️ kubectl not available - manual deployment required"
          echo "Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:emergency-${{ github.sha }}"
        fi
        
    - name: 📊 Summary
      run: |
        echo "## 🚨 Emergency Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Reason**: ${{ github.event.inputs.reason }}" >> $GITHUB_STEP_SUMMARY
        echo "**Image**: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:emergency-${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "**Actor**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
        echo "**Tests Skipped**: ${{ github.event.inputs.skip_tests }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "⚠️ Please verify deployment and create a proper fix soon!" >> $GITHUB_STEP_SUMMARY
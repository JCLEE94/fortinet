apiVersion: apps/v1
kind: Deployment
metadata:
  name: fortinet
  namespace: fortinet
spec:
  replicas: 2
  selector:
    matchLabels:
      app: fortinet
  template:
    metadata:
      labels:
        app: fortinet
    spec:
      initContainers:
      - name: setup-permissions
        image: busybox:latest
        command: ['sh', '-c', 'chmod -R 777 /app/data /app/logs']
        volumeMounts:
        - name: data
          mountPath: /app/data
        - name: logs
          mountPath: /app/logs
      
      containers:
      - name: fortinet
        image: registry.jclee.me/fortinet:latest  # Will be updated by CI/CD
        imagePullPolicy: Always
        ports:
        - containerPort: 7777
          name: http
          protocol: TCP
        
        envFrom:
        - configMapRef:
            name: fortinet-config
        - secretRef:
            name: fortinet-secret
            optional: true
        
        livenessProbe:
          httpGet:
            path: /api/health
            port: 7777
          initialDelaySeconds: 120
          periodSeconds: 60
          timeoutSeconds: 10
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /api/health
            port: 7777
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        
        volumeMounts:
        - name: data
          mountPath: /app/data
        - name: logs
          mountPath: /app/logs
      
      imagePullSecrets:
      - name: regcred
      
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: fortinet-data-pvc
      - name: logs
        persistentVolumeClaim:
          claimName: fortinet-logs-pvc
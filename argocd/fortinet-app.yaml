apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: fortinet
  namespace: argocd
  annotations:
    # ArgoCD Image Updater - Production Environment
    argocd-image-updater.argoproj.io/image-list: fortinet=registry.jclee.me/fortinet:~latest
    argocd-image-updater.argoproj.io/fortinet.update-strategy: latest
    argocd-image-updater.argoproj.io/fortinet.allow-tags: regexp:^(latest|v?\d+\.\d+\.\d+.*|production-latest|master-.*)$
    argocd-image-updater.argoproj.io/fortinet.pull-secret: fortinet/registry-credentials
    argocd-image-updater.argoproj.io/write-back-method: git
    argocd-image-updater.argoproj.io/git-branch: image-updates
    # Enhanced monitoring and sync settings
    argocd-image-updater.argoproj.io/fortinet.platforms: linux/amd64
    argocd-image-updater.argoproj.io/fortinet.ignore-tags: regexp:^(dev-.*|staging-.*)$
    # Post-deployment hooks
    argocd-image-updater.argoproj.io/fortinet.post-update-hook: |
      echo "ðŸš€ Production deployment completed"
      curl -X POST https://api.github.com/repos/JCLEE94/fortinet/actions/workflows/offline-tar.yml/dispatches \
      -H "Authorization: Bearer $GITHUB_TOKEN" \
      -H "Accept: application/vnd.github.v3+json" \
      -d '{"ref":"master","inputs":{"image_tag":"{{.Image.Tag}}","chart_version":"{{.Image.Tag}}"}}'
spec:
  project: default
  source:
    repoURL: https://github.com/JCLEE94/fortinet
    targetRevision: HEAD
    path: k8s/manifests
  destination:
    server: https://kubernetes.default.svc
    namespace: fortinet
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
    - CreateNamespace=true
    - PrunePropagationPolicy=foreground
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  # Health check for deployment completion
  health:
    enabled: true
FROM python:3.9-slim

# 폐쇄망 환경을 위한 오프라인 전용 Dockerfile
# 외부 연결 없이 완전히 격리된 환경에서 실행

# 빌드 인수
ARG BUILD_TIME="Unknown"
ARG TZ="Asia/Seoul"

# 메타데이터
LABEL maintainer="Nextrade <support@nextrade.co.kr>"
LABEL version="2.0.0"
LABEL description="FortiGate Nextrade - Offline Deployment"
LABEL build_time="${BUILD_TIME}"

# 시스템 패키지 설치 (외부 연결 차단)
RUN apt-get update && apt-get install -y \
    gcc \
    python3-dev \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# 작업 디렉토리 설정
WORKDIR /app

# 의존성 파일 복사 및 설치 (사전 다운로드된 패키지 사용)
COPY requirements_minimal.txt .
RUN pip install --no-cache-dir --no-index --find-links /tmp/pip-cache -r requirements_minimal.txt || \
    pip install --no-cache-dir -r requirements_minimal.txt

# 애플리케이션 파일 복사
COPY . .

# 로그 및 데이터 디렉토리 생성
RUN mkdir -p /app/logs /app/data && chmod -R 755 /app

# 환경변수 설정
ENV TZ=${TZ}
ENV BUILD_TIME=${BUILD_TIME}
ENV PYTHONPATH=/app:/app/src
ENV FLASK_APP=src.web_app
ENV FLASK_ENV=production
ENV APP_MODE=production
ENV FLASK_PORT=7777

# 오프라인 모드 환경변수
ENV OFFLINE_MODE=true
ENV NO_INTERNET=true
ENV DISABLE_EXTERNAL_CALLS=true
ENV DISABLE_UPDATES=true
ENV DISABLE_TELEMETRY=true

# 네트워크 비활성화 관련 설정
ENV HTTP_PROXY=""
ENV HTTPS_PROXY=""
ENV NO_PROXY="*"

# 포트 노출
EXPOSE 7777

# 오프라인 헬스체크 (외부 연결 없이)
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD python3 -c "import urllib.request; urllib.request.urlopen('http://localhost:7777', timeout=5).read()" || exit 1

# 사용자 권한 설정
RUN groupadd -r appuser && useradd -r -g appuser appuser
RUN chown -R appuser:appuser /app
USER appuser

# 애플리케이션 실행 (완전 오프라인 모드)
WORKDIR /app
CMD ["python", "-m", "src.web_app"]
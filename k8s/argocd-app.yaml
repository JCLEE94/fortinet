apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: fortinet-app
  namespace: argocd
  labels:
    app.kubernetes.io/name: fortinet-app
    app.kubernetes.io/component: application
    app.kubernetes.io/managed-by: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://github.com/JCLEE94/fortinet.git
    targetRevision: HEAD
    path: argocd/environments/production
  destination:
    server: https://kubernetes.default.svc
    namespace: fortinet
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      - PruneLast=true
      - RespectIgnoreDifferences=true
      - ApplyOutOfSyncOnly=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  revisionHistoryLimit: 10
  ignoreDifferences:
    - group: apps
      kind: Deployment
      jsonPointers:
        - /spec/replicas
        - /spec/template/metadata/annotations/deployment.kubernetes.io~1revision
  info:
    - name: 'Repository'
      value: 'https://github.com/JCLEE94/fortinet'
    - name: 'Environment'
      value: 'Production'
    - name: 'Deployment Strategy'
      value: 'GitOps via ArgoCD'
---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: fortinet-project
  namespace: argocd
  labels:
    app.kubernetes.io/name: fortinet-project
    app.kubernetes.io/component: project
spec:
  description: FortiGate Nextrade Project
  sourceRepos:
  - 'https://github.com/JCLEE94/fortinet.git'
  destinations:
  - namespace: fortinet
    server: https://kubernetes.default.svc
  - namespace: argocd
    server: https://kubernetes.default.svc
  clusterResourceWhitelist:
  - group: ''
    kind: Namespace
  - group: ''
    kind: PersistentVolume
  namespaceResourceWhitelist:
  - group: ''
    kind: ConfigMap
  - group: ''
    kind: Secret
  - group: ''
    kind: Service
  - group: ''
    kind: PersistentVolumeClaim
  - group: apps
    kind: Deployment
  - group: networking.k8s.io
    kind: Ingress
  - group: networking.k8s.io
    kind: NetworkPolicy
  roles:
  - name: admin
    description: Admin role for fortinet project
    policies:
    - p, proj:fortinet-project:admin, applications, *, fortinet-project/*, allow
    - p, proj:fortinet-project:admin, repositories, *, *, allow
    groups:
    - fortinet:admin
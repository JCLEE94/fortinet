apiVersion: v1
kind: Namespace
metadata:
  name: npm-external-dns
---
# ConfigMap for webhook provider configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: npm-webhook-config
  namespace: npm-external-dns
data:
  NPM_URL: "http://192.168.50.215:81"  # Your NPM URL
  DEFAULT_FORWARD_SCHEME: "http"
  DEFAULT_FORWARD_PORT: "80"
  K8S_NODES: "192.168.50.110,192.168.50.100"  # Your K8s node IPs
---
# Secret for NPM credentials
apiVersion: v1
kind: Secret
metadata:
  name: npm-credentials
  namespace: npm-external-dns
type: Opaque
stringData:
  NPM_EMAIL: "admin@example.com"  # Change this
  NPM_PASSWORD: "changeme"        # Change this
---
# Webhook Provider Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: npm-webhook-provider
  namespace: npm-external-dns
  labels:
    app: npm-webhook-provider
spec:
  replicas: 1
  selector:
    matchLabels:
      app: npm-webhook-provider
  template:
    metadata:
      labels:
        app: npm-webhook-provider
    spec:
      containers:
      - name: webhook
        image: npm-webhook-provider:latest  # Build and push this image
        imagePullPolicy: Always
        ports:
        - containerPort: 8888
          name: http
        env:
        - name: WEBHOOK_PORT
          value: "8888"
        envFrom:
        - configMapRef:
            name: npm-webhook-config
        - secretRef:
            name: npm-credentials
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8888
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8888
          initialDelaySeconds: 5
          periodSeconds: 10
---
# Service for webhook provider
apiVersion: v1
kind: Service
metadata:
  name: npm-webhook-provider
  namespace: npm-external-dns
  labels:
    app: npm-webhook-provider
spec:
  type: ClusterIP
  ports:
  - port: 8888
    targetPort: 8888
    protocol: TCP
    name: http
  selector:
    app: npm-webhook-provider
---
# External-DNS Deployment with webhook provider
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-dns
  namespace: npm-external-dns
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: external-dns
  template:
    metadata:
      labels:
        app: external-dns
    spec:
      serviceAccountName: external-dns
      containers:
      - name: external-dns
        image: registry.k8s.io/external-dns/external-dns:v0.14.0
        args:
        # Webhook provider configuration
        - --source=ingress
        - --source=service
        - --provider=webhook
        - --webhook-provider-url=http://npm-webhook-provider:8888
        # Domain filter
        - --domain-filter=jclee.me
        # Annotations to watch
        - --annotation-filter=external-dns.alpha.kubernetes.io/hostname
        # Policy
        - --policy=sync  # sync = create/update/delete
        - --registry=txt
        - --txt-owner-id=npm-cluster
        - --txt-prefix=external-dns-
        # Logging
        - --log-level=info
        - --log-format=text
        # Interval
        - --interval=1m
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
          limits:
            memory: "150Mi"
            cpu: "200m"
---
# ServiceAccount for external-dns
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-dns
  namespace: npm-external-dns
---
# ClusterRole for external-dns
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-dns
rules:
- apiGroups: [""]
  resources: ["services","endpoints","pods"]
  verbs: ["get","watch","list"]
- apiGroups: ["extensions","networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get","watch","list"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["list","watch"]
---
# ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: external-dns-viewer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-dns
subjects:
- kind: ServiceAccount
  name: external-dns
  namespace: npm-external-dns
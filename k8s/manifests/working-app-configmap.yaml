apiVersion: v1
kind: ConfigMap
metadata:
  name: fortinet-working-app
  namespace: fortinet
data:
  start.sh: |
    #!/bin/bash
    echo "Starting Working FortiGate Nextrade Application..."
    cd /tmp
    
    # Install dependencies
    pip install Flask flask-cors redis requests jinja2 psutil loguru
    
    # Create working Flask app with multiple pages
    cat > /tmp/app.py << 'EOF'
    import os
    from flask import Flask, render_template_string, jsonify, request
    from flask_cors import CORS
    import datetime
    import json
    
    app = Flask(__name__)
    CORS(app)
    
    # Base template
    BASE_TEMPLATE = '''
    <!DOCTYPE html>
    <html lang="ko">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>{{ title }} - FortiGate Nextrade</title>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
        <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
        <style>
            .sidebar { background: #2c3e50; min-height: 100vh; }
            .sidebar .nav-link { color: #bdc3c7; border-radius: 8px; margin: 2px 0; }
            .sidebar .nav-link:hover { background: #34495e; color: white; }
            .sidebar .nav-link.active { background: #3498db; color: white; }
            .main-content { background: #ecf0f1; min-height: 100vh; }
            .card { border: none; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
            .status-online { color: #27ae60; }
            .status-offline { color: #e74c3c; }
            .metric-card { transition: transform 0.2s; }
            .metric-card:hover { transform: translateY(-2px); }
        </style>
    </head>
    <body>
        <div class="container-fluid p-0">
            <div class="row g-0">
                <!-- Sidebar -->
                <div class="col-md-2 sidebar p-3">
                    <h4 class="text-white mb-4">
                        <i class="fas fa-shield-alt text-primary"></i>
                        FortiGate Nextrade
                    </h4>
                    <nav class="nav flex-column">
                        <a class="nav-link {{ 'active' if page == 'dashboard' else '' }}" href="/"><i class="fas fa-tachometer-alt me-2"></i>대시보드</a>
                        <a class="nav-link {{ 'active' if page == 'devices' else '' }}" href="/devices"><i class="fas fa-network-wired me-2"></i>네트워크 모니터링</a>
                        <a class="nav-link {{ 'active' if page == 'policies' else '' }}" href="/policies"><i class="fas fa-shield-alt me-2"></i>정책 관리</a>
                        <a class="nav-link {{ 'active' if page == 'topology' else '' }}" href="/topology"><i class="fas fa-project-diagram me-2"></i>토폴로지</a>
                        <a class="nav-link {{ 'active' if page == 'analytics' else '' }}" href="/analytics"><i class="fas fa-chart-line me-2"></i>분석</a>
                        <a class="nav-link {{ 'active' if page == 'threats' else '' }}" href="/threats"><i class="fas fa-exclamation-triangle me-2"></i>위협 탐지</a>
                        <a class="nav-link {{ 'active' if page == 'fortimanager' else '' }}" href="/fortimanager"><i class="fas fa-cogs me-2"></i>FortiManager</a>
                        <a class="nav-link {{ 'active' if page == 'itsm' else '' }}" href="/itsm"><i class="fas fa-tools me-2"></i>ITSM 연동</a>
                        <a class="nav-link {{ 'active' if page == 'logs' else '' }}" href="/logs"><i class="fas fa-file-alt me-2"></i>로그 관리</a>
                        <a class="nav-link {{ 'active' if page == 'settings' else '' }}" href="/settings"><i class="fas fa-cog me-2"></i>설정</a>
                    </nav>
                </div>
                
                <!-- Main Content -->
                <div class="col-md-10 main-content p-4">
                    {{ content | safe }}
                </div>
            </div>
        </div>
        
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    </body>
    </html>
    '''
    
    # Dashboard content
    DASHBOARD_CONTENT = '''
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>네트워크 관리 대시보드</h2>
        <div class="d-flex align-items-center">
            <span class="badge bg-success me-2">ONLINE</span>
            <span class="text-muted">Last Update: {{ current_time }}</span>
        </div>
    </div>
    
    <!-- Metrics Row -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card metric-card text-center p-3">
                <h3 class="text-primary"><i class="fas fa-server"></i></h3>
                <h4>3</h4>
                <p class="text-muted">활성 장비</p>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card metric-card text-center p-3">
                <h3 class="text-success"><i class="fas fa-shield-alt"></i></h3>
                <h4>247</h4>
                <p class="text-muted">보안 정책</p>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card metric-card text-center p-3">
                <h3 class="text-warning"><i class="fas fa-exclamation-triangle"></i></h3>
                <h4>12</h4>
                <p class="text-muted">경고</p>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card metric-card text-center p-3">
                <h3 class="text-info"><i class="fas fa-chart-line"></i></h3>
                <h4>1.2GB</h4>
                <p class="text-muted">트래픽</p>
            </div>
        </div>
    </div>
    
    <!-- Main Dashboard Content -->
    <div class="row">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h5><i class="fas fa-network-wired me-2"></i>네트워크 상태</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-6">
                            <h6>FortiGate 장비</h6>
                            <ul class="list-unstyled">
                                <li><i class="fas fa-circle status-online me-2"></i>FW-01 (192.168.1.1)</li>
                                <li><i class="fas fa-circle status-online me-2"></i>FW-02 (192.168.1.2)</li>
                                <li><i class="fas fa-circle status-offline me-2"></i>FW-03 (192.168.1.3)</li>
                            </ul>
                        </div>
                        <div class="col-6">
                            <h6>FortiManager</h6>
                            <ul class="list-unstyled">
                                <li><i class="fas fa-circle status-online me-2"></i>Primary (192.168.10.100)</li>
                                <li><i class="fas fa-cogs me-2"></i>Policy Packages: 5</li>
                                <li><i class="fas fa-users me-2"></i>Managed Devices: 3</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-4">
            <div class="card">
                <div class="card-header">
                    <h5><i class="fas fa-bell me-2"></i>최근 이벤트</h5>
                </div>
                <div class="card-body">
                    <div class="alert alert-warning alert-sm">
                        <small><strong>10:30</strong> Policy update required</small>
                    </div>
                    <div class="alert alert-info alert-sm">
                        <small><strong>09:45</strong> Backup completed</small>
                    </div>
                    <div class="alert alert-success alert-sm">
                        <small><strong>09:15</strong> All systems online</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
    '''
    
    # Mock data
    mock_devices = [
        {"name": "FW-01", "ip": "192.168.1.1", "status": "online", "cpu": 25, "memory": 45, "uptime": "15일 3시간"},
        {"name": "FW-02", "ip": "192.168.1.2", "status": "online", "cpu": 30, "memory": 52, "uptime": "12일 8시간"},
        {"name": "FW-03", "ip": "192.168.1.3", "status": "offline", "cpu": 0, "memory": 0, "uptime": "연결 끊김"},
    ]
    
    mock_policies = [
        {"id": 1, "name": "Allow HTTP", "action": "allow", "enabled": True, "source": "LAN", "dest": "WAN"},
        {"id": 2, "name": "Block Malware", "action": "deny", "enabled": True, "source": "ANY", "dest": "ANY"},
        {"id": 3, "name": "VPN Access", "action": "allow", "enabled": False, "source": "VPN", "dest": "LAN"},
    ]
    
    @app.route('/')
    def dashboard():
        current_time = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        content = render_template_string(DASHBOARD_CONTENT, current_time=current_time)
        return render_template_string(BASE_TEMPLATE, title="대시보드", page="dashboard", content=content)
    
    @app.route('/devices')
    def devices():
        content = f'''
        <h2><i class="fas fa-network-wired me-2"></i>네트워크 장비 관리</h2>
        <div class="card">
            <div class="card-header d-flex justify-content-between">
                <h5>FortiGate 장비 목록</h5>
                <button class="btn btn-primary btn-sm" onclick="refreshDevices()">
                    <i class="fas fa-sync-alt me-1"></i>새로고침
                </button>
            </div>
            <div class="card-body">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>장비명</th>
                            <th>IP 주소</th>
                            <th>상태</th>
                            <th>CPU</th>
                            <th>메모리</th>
                            <th>업타임</th>
                            <th>관리</th>
                        </tr>
                    </thead>
                    <tbody>
        '''
        
        for device in mock_devices:
            status_class = "success" if device["status"] == "online" else "danger"
            content += f'''
                        <tr>
                            <td><strong>{device["name"]}</strong></td>
                            <td>{device["ip"]}</td>
                            <td><span class="badge bg-{status_class}">{device["status"]}</span></td>
                            <td>{device["cpu"]}%</td>
                            <td>{device["memory"]}%</td>
                            <td>{device["uptime"]}</td>
                            <td>
                                <button class="btn btn-sm btn-outline-primary me-1" onclick="alert('장비 세부정보: {device["name"]}')">
                                    <i class="fas fa-info-circle"></i>
                                </button>
                                <button class="btn btn-sm btn-outline-warning" onclick="alert('장비 재시작: {device["name"]}')">
                                    <i class="fas fa-power-off"></i>
                                </button>
                            </td>
                        </tr>
            '''
        
        content += '''
                    </tbody>
                </table>
            </div>
        </div>
        <script>
            function refreshDevices() {
                alert('장비 상태를 새로고침합니다...');
                location.reload();
            }
        </script>
        '''
        
        return render_template_string(BASE_TEMPLATE, title="네트워크 모니터링", page="devices", content=content)
    
    @app.route('/policies')
    def policies():
        content = f'''
        <h2><i class="fas fa-shield-alt me-2"></i>보안 정책 관리</h2>
        <div class="card">
            <div class="card-header d-flex justify-content-between">
                <h5>방화벽 정책 목록</h5>
                <button class="btn btn-success btn-sm" onclick="alert('새 정책을 추가합니다')">
                    <i class="fas fa-plus me-1"></i>정책 추가
                </button>
            </div>
            <div class="card-body">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>정책명</th>
                            <th>액션</th>
                            <th>소스</th>
                            <th>목적지</th>
                            <th>상태</th>
                            <th>관리</th>
                        </tr>
                    </thead>
                    <tbody>
        '''
        
        for policy in mock_policies:
            action_class = "success" if policy["action"] == "allow" else "warning"
            status_class = "primary" if policy["enabled"] else "secondary"
            content += f'''
                        <tr>
                            <td>{policy["id"]}</td>
                            <td><strong>{policy["name"]}</strong></td>
                            <td><span class="badge bg-{action_class}">{policy["action"]}</span></td>
                            <td>{policy["source"]}</td>
                            <td>{policy["dest"]}</td>
                            <td><span class="badge bg-{status_class}">{"활성" if policy["enabled"] else "비활성"}</span></td>
                            <td>
                                <button class="btn btn-sm btn-outline-primary me-1" onclick="togglePolicy({policy["id"]}, '{policy["name"]}')">
                                    <i class="fas fa-toggle-{'on' if policy["enabled"] else 'off'}"></i>
                                </button>
                                <button class="btn btn-sm btn-outline-warning me-1" onclick="alert('정책 편집: {policy["name"]}')">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button class="btn btn-sm btn-outline-danger" onclick="alert('정책 삭제: {policy["name"]}')">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </td>
                        </tr>
            '''
        
        content += '''
                    </tbody>
                </table>
            </div>
        </div>
        <script>
            function togglePolicy(id, name) {
                if(confirm(`정책 "${name}"의 상태를 변경하시겠습니까?`)) {
                    alert(`정책 "${name}" 상태가 변경되었습니다.`);
                    setTimeout(() => location.reload(), 1000);
                }
            }
        </script>
        '''
        
        return render_template_string(BASE_TEMPLATE, title="정책 관리", page="policies", content=content)
    
    @app.route('/api/health')
    def health():
        return jsonify({
            "status": "healthy",
            "service": "FortiGate Nextrade",
            "version": "1.0.1",
            "environment": "production"
        })
    
    if __name__ == '__main__':
        print("🔥 Starting FortiGate Nextrade - Working Interactive Application")
        print(f"🌐 Running on http://0.0.0.0:7777")
        print(f"📊 Environment: production")
        app.run(host='0.0.0.0', port=7777, debug=False)
    EOF
    
    # Run the working application
    python /tmp/app.py
apiVersion: v1
kind: ConfigMap
metadata:
  name: fortinet-dashboard-app
  namespace: fortinet
  labels:
    app: fortinet
    component: dashboard
data:
  start.sh: |
    #!/bin/bash
    echo "🚀 Starting FortiGate Dashboard Application..."
    cd /app
    
    # Install Flask
    pip install Flask requests redis loguru
    
    # Start the application
    python main.py
    
  main.py: |
    from flask import Flask, render_template_string, jsonify
    import json
    import datetime
    import os

    app = Flask(__name__)

    @app.route('/')
    def dashboard():
        return render_template_string(DASHBOARD_TEMPLATE)

    @app.route('/api/health')
    def health():
        return jsonify({
            "status": "healthy",
            "service": "FortiGate Nextrade Dashboard",
            "version": "1.0.1",
            "environment": os.getenv('APP_MODE', 'production'),
            "timestamp": datetime.datetime.now().isoformat()
        })

    @app.route('/api/stats')
    def get_stats():
        return jsonify({
            "todayAnalysis": 324,
            "allowedTraffic": "98.5%",
            "avgAnalysisTime": "0.2초",
            "activePolicies": 15,
            "totalDevices": 8,
            "securityAlerts": 3,
            "networkHealth": "양호",
            "cpuUsage": "45%"
        })

    @app.route('/api/devices')
    def get_devices():
        return jsonify([
            {"name": "FW-01", "status": "active", "ip": "192.168.1.1", "model": "FortiGate 100F"},
            {"name": "FW-02", "status": "active", "ip": "192.168.1.2", "model": "FortiGate 200F"},
            {"name": "SW-01", "status": "warning", "ip": "192.168.1.10", "model": "FortiSwitch 248E"},
            {"name": "AP-01", "status": "active", "ip": "192.168.1.20", "model": "FortiAP 431F"}
        ])

    DASHBOARD_TEMPLATE = '''
    <!DOCTYPE html>
    <html lang="ko">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>FortiGate Nextrade Dashboard</title>
        <style>
            * {
                margin: 0;
                padding: 0;
                box-sizing: border-box;
            }

            :root {
                --fortigate-blue: #0066cc;
                --fortigate-dark-bg: #1e2832;
                --fortigate-sidebar: #252d38;
                --fortigate-hover: #2e3844;
                --fortigate-form-bg: #2a3441;
                --fortigate-input-bg: #1e2832;
                --fortigate-border: #3a4454;
                --fortigate-card-bg: #2a3441;
                --fortigate-success: #28a745;
                --fortigate-warning: #ffc107;
                --fortigate-danger: #dc3545;
            }

            body {
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                background: var(--fortigate-dark-bg);
                color: white;
                overflow-x: hidden;
            }

            /* Header */
            .ui-header {
                background: var(--fortigate-blue);
                padding: 20px 30px;
                display: flex;
                justify-content: space-between;
                align-items: center;
                box-shadow: 0 4px 15px rgba(0,0,0,0.3);
                position: relative;
                z-index: 1000;
            }

            .ui-logo {
                font-size: 1.8em;
                font-weight: bold;
                color: white;
                display: flex;
                align-items: center;
                gap: 10px;
            }

            .ui-nav {
                display: flex;
                gap: 15px;
            }

            .ui-nav-item {
                padding: 10px 20px;
                background: rgba(255,255,255,0.1);
                border-radius: 8px;
                cursor: pointer;
                transition: all 0.3s ease;
                color: white;
                text-decoration: none;
                font-weight: 500;
            }

            .ui-nav-item:hover,
            .ui-nav-item.active {
                background: rgba(255,255,255,0.2);
                transform: translateY(-2px);
            }

            /* Sidebar */
            .ui-sidebar {
                position: fixed;
                left: 0;
                top: 80px;
                width: 280px;
                background: var(--fortigate-sidebar);
                height: calc(100vh - 80px);
                padding: 20px;
                overflow-y: auto;
                box-shadow: 4px 0 15px rgba(0,0,0,0.2);
                z-index: 999;
            }

            .ui-menu-item {
                padding: 15px 20px;
                margin-bottom: 8px;
                border-radius: 10px;
                cursor: pointer;
                transition: all 0.3s ease;
                display: flex;
                align-items: center;
                gap: 15px;
                color: #ccc;
                font-weight: 500;
            }

            .ui-menu-item:hover {
                background: var(--fortigate-hover);
                color: white;
                transform: translateX(5px);
            }

            .ui-menu-item.active {
                background: var(--fortigate-blue);
                color: white;
                box-shadow: 0 4px 15px rgba(0,102,204,0.3);
            }

            .ui-menu-item span:first-child {
                font-size: 1.3em;
                width: 25px;
                text-align: center;
            }

            /* Main Content */
            .ui-content {
                margin-left: 300px;
                padding: 40px;
                min-height: calc(100vh - 80px);
                background: var(--fortigate-dark-bg);
            }

            .page-title {
                font-size: 2.5em;
                color: white;
                margin-bottom: 10px;
                font-weight: 600;
            }

            .page-subtitle {
                color: #aaa;
                margin-bottom: 40px;
                font-size: 1.1em;
            }

            /* Statistics Grid */
            .stats-grid {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
                gap: 25px;
                margin-bottom: 40px;
            }

            .stat-card {
                background: linear-gradient(135deg, var(--fortigate-card-bg), #3a4454);
                padding: 30px;
                border-radius: 15px;
                text-align: center;
                border: 1px solid var(--fortigate-border);
                transition: all 0.3s ease;
                position: relative;
                overflow: hidden;
            }

            .stat-card::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                height: 4px;
                background: var(--fortigate-blue);
            }

            .stat-card:hover {
                transform: translateY(-8px);
                box-shadow: 0 15px 40px rgba(0,0,0,0.4);
                border-color: var(--fortigate-blue);
            }

            .stat-icon {
                font-size: 3em;
                margin-bottom: 15px;
                display: block;
            }

            .stat-value {
                font-size: 2.8em;
                font-weight: bold;
                color: var(--fortigate-blue);
                margin-bottom: 10px;
                line-height: 1;
            }

            .stat-label {
                color: #bbb;
                text-transform: uppercase;
                font-size: 0.95em;
                letter-spacing: 1px;
                font-weight: 500;
            }

            /* Device Status Grid */
            .device-grid {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
                gap: 25px;
                margin-bottom: 40px;
            }

            .device-card {
                background: var(--fortigate-card-bg);
                padding: 25px;
                border-radius: 15px;
                border: 1px solid var(--fortigate-border);
                transition: all 0.3s ease;
            }

            .device-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 30px rgba(0,0,0,0.3);
                border-color: var(--fortigate-blue);
            }

            .device-header {
                display: flex;
                justify-content: space-between;
                align-items: center;
                margin-bottom: 15px;
            }

            .device-name {
                font-size: 1.3em;
                font-weight: bold;
                color: white;
            }

            .device-status {
                padding: 6px 12px;
                border-radius: 20px;
                font-size: 0.9em;
                font-weight: 500;
                text-transform: uppercase;
            }

            .status-active {
                background: var(--fortigate-success);
                color: white;
            }

            .status-warning {
                background: var(--fortigate-warning);
                color: black;
            }

            .status-danger {
                background: var(--fortigate-danger);
                color: white;
            }

            .device-info {
                color: #aaa;
                margin-bottom: 8px;
            }

            /* Network Topology */
            .topology-section {
                background: var(--fortigate-card-bg);
                padding: 30px;
                border-radius: 15px;
                border: 1px solid var(--fortigate-border);
                margin-bottom: 30px;
            }

            .topology-title {
                font-size: 1.8em;
                color: white;
                margin-bottom: 25px;
                display: flex;
                align-items: center;
                gap: 10px;
            }

            .topology-visual {
                display: flex;
                justify-content: center;
                align-items: center;
                gap: 30px;
                flex-wrap: wrap;
                padding: 20px;
            }

            .topology-node {
                background: var(--fortigate-dark-bg);
                padding: 20px;
                border-radius: 12px;
                border: 2px solid var(--fortigate-blue);
                text-align: center;
                min-width: 120px;
                transition: all 0.3s ease;
            }

            .topology-node:hover {
                transform: scale(1.05);
                box-shadow: 0 8px 25px rgba(0,102,204,0.4);
            }

            .topology-icon {
                font-size: 2.5em;
                margin-bottom: 10px;
                display: block;
            }

            .topology-arrow {
                font-size: 2em;
                color: var(--fortigate-blue);
            }

            /* Responsive Design */
            @media (max-width: 768px) {
                .ui-sidebar {
                    transform: translateX(-100%);
                    transition: transform 0.3s ease;
                }

                .ui-content {
                    margin-left: 0;
                    padding: 20px;
                }

                .stats-grid,
                .device-grid {
                    grid-template-columns: 1fr;
                }

                .topology-visual {
                    flex-direction: column;
                }

                .topology-arrow {
                    transform: rotate(90deg);
                }
            }

            /* Loading Animation */
            .loading {
                display: inline-block;
                width: 20px;
                height: 20px;
                border: 3px solid #f3f3f3;
                border-top: 3px solid var(--fortigate-blue);
                border-radius: 50%;
                animation: spin 1s linear infinite;
            }

            @keyframes spin {
                0% { transform: rotate(0deg); }
                100% { transform: rotate(360deg); }
            }

            /* Status Indicators */
            .status-indicator {
                display: inline-block;
                width: 10px;
                height: 10px;
                border-radius: 50%;
                margin-right: 8px;
            }

            .status-green { background: var(--fortigate-success); }
            .status-yellow { background: var(--fortigate-warning); }
            .status-red { background: var(--fortigate-danger); }
        </style>
    </head>
    <body>
        <!-- Header -->
        <div class="ui-header">
            <div class="ui-logo">
                🛡️ FortiGate Nextrade
            </div>
            <div class="ui-nav">
                <div class="ui-nav-item active">대시보드</div>
                <div class="ui-nav-item">장치 관리</div>
                <div class="ui-nav-item">패킷 분석</div>
                <div class="ui-nav-item">정책 관리</div>
                <div class="ui-nav-item">모니터링</div>
            </div>
        </div>

        <!-- Sidebar -->
        <div class="ui-sidebar">
            <div class="ui-menu-item active">
                <span>📊</span>
                <span>대시보드 개요</span>
            </div>
            <div class="ui-menu-item">
                <span>🖥️</span>
                <span>장치 상태</span>
            </div>
            <div class="ui-menu-item">
                <span>🔍</span>
                <span>패킷 경로 분석</span>
            </div>
            <div class="ui-menu-item">
                <span>📈</span>
                <span>트래픽 통계</span>
            </div>
            <div class="ui-menu-item">
                <span>🔐</span>
                <span>보안 정책</span>
            </div>
            <div class="ui-menu-item">
                <span>⚡</span>
                <span>성능 분석</span>
            </div>
            <div class="ui-menu-item">
                <span>🚨</span>
                <span>보안 알림</span>
            </div>
            <div class="ui-menu-item">
                <span>📋</span>
                <span>로그 관리</span>
            </div>
            <div class="ui-menu-item">
                <span>⚙️</span>
                <span>시스템 설정</span>
            </div>
        </div>

        <!-- Main Content -->
        <div class="ui-content">
            <h1 class="page-title">네트워크 보안 대시보드</h1>
            <p class="page-subtitle">실시간 네트워크 상태 및 보안 모니터링</p>

            <!-- Statistics Cards -->
            <div class="stats-grid">
                <div class="stat-card">
                    <span class="stat-icon">🔍</span>
                    <div class="stat-value" id="todayAnalysis">324</div>
                    <div class="stat-label">오늘 분석 횟수</div>
                </div>
                <div class="stat-card">
                    <span class="stat-icon">✅</span>
                    <div class="stat-value" id="allowedTraffic">98.5%</div>
                    <div class="stat-label">허용된 트래픽</div>
                </div>
                <div class="stat-card">
                    <span class="stat-icon">⚡</span>
                    <div class="stat-value" id="avgAnalysisTime">0.2초</div>
                    <div class="stat-label">평균 분석 시간</div>
                </div>
                <div class="stat-card">
                    <span class="stat-icon">📋</span>
                    <div class="stat-value" id="activePolicies">15</div>
                    <div class="stat-label">활성 정책</div>
                </div>
                <div class="stat-card">
                    <span class="stat-icon">🖥️</span>
                    <div class="stat-value" id="totalDevices">8</div>
                    <div class="stat-label">관리 장치</div>
                </div>
                <div class="stat-card">
                    <span class="stat-icon">🚨</span>
                    <div class="stat-value" id="securityAlerts">3</div>
                    <div class="stat-label">보안 알림</div>
                </div>
                <div class="stat-card">
                    <span class="stat-icon">💚</span>
                    <div class="stat-value" id="networkHealth">양호</div>
                    <div class="stat-label">네트워크 상태</div>
                </div>
                <div class="stat-card">
                    <span class="stat-icon">📊</span>
                    <div class="stat-value" id="cpuUsage">45%</div>
                    <div class="stat-label">CPU 사용률</div>
                </div>
            </div>

            <!-- Network Topology -->
            <div class="topology-section">
                <h2 class="topology-title">
                    🌐 네트워크 토폴로지
                </h2>
                <div class="topology-visual">
                    <div class="topology-node">
                        <span class="topology-icon">💻</span>
                        <div>Internal Network</div>
                        <small>192.168.1.0/24</small>
                    </div>
                    <div class="topology-arrow">→</div>
                    <div class="topology-node">
                        <span class="topology-icon">🛡️</span>
                        <div>FortiGate</div>
                        <small>FW-01</small>
                    </div>
                    <div class="topology-arrow">→</div>
                    <div class="topology-node">
                        <span class="topology-icon">🌐</span>
                        <div>Internet</div>
                        <small>External</small>
                    </div>
                </div>
            </div>

            <!-- Device Status -->
            <div class="device-grid" id="deviceGrid">
                <!-- Devices will be loaded dynamically -->
            </div>
        </div>

        <script>
            // Load statistics
            function loadStats() {
                fetch('/api/stats')
                    .then(response => response.json())
                    .then(data => {
                        document.getElementById('todayAnalysis').textContent = data.todayAnalysis;
                        document.getElementById('allowedTraffic').textContent = data.allowedTraffic;
                        document.getElementById('avgAnalysisTime').textContent = data.avgAnalysisTime;
                        document.getElementById('activePolicies').textContent = data.activePolicies;
                        document.getElementById('totalDevices').textContent = data.totalDevices;
                        document.getElementById('securityAlerts').textContent = data.securityAlerts;
                        document.getElementById('networkHealth').textContent = data.networkHealth;
                        document.getElementById('cpuUsage').textContent = data.cpuUsage;
                    })
                    .catch(error => console.error('Error loading stats:', error));
            }

            // Load devices
            function loadDevices() {
                fetch('/api/devices')
                    .then(response => response.json())
                    .then(devices => {
                        const deviceGrid = document.getElementById('deviceGrid');
                        deviceGrid.innerHTML = devices.map(device => `
                            <div class="device-card">
                                <div class="device-header">
                                    <div class="device-name">${device.name}</div>
                                    <div class="device-status status-${device.status}">${device.status}</div>
                                </div>
                                <div class="device-info">IP: ${device.ip}</div>
                                <div class="device-info">Model: ${device.model}</div>
                                <div class="device-info">
                                    <span class="status-indicator status-${device.status === 'active' ? 'green' : device.status === 'warning' ? 'yellow' : 'red'}"></span>
                                    Status: ${device.status}
                                </div>
                            </div>
                        `).join('');
                    })
                    .catch(error => console.error('Error loading devices:', error));
            }

            // Menu item click handlers
            document.querySelectorAll('.ui-menu-item').forEach(item => {
                item.addEventListener('click', function() {
                    document.querySelectorAll('.ui-menu-item').forEach(i => i.classList.remove('active'));
                    this.classList.add('active');
                });
            });

            // Navigation item click handlers
            document.querySelectorAll('.ui-nav-item').forEach(item => {
                item.addEventListener('click', function() {
                    document.querySelectorAll('.ui-nav-item').forEach(i => i.classList.remove('active'));
                    this.classList.add('active');
                });
            });

            // Initialize
            document.addEventListener('DOMContentLoaded', function() {
                loadStats();
                loadDevices();
                
                // Refresh data every 30 seconds
                setInterval(loadStats, 30000);
                setInterval(loadDevices, 60000);
            });
        </script>
    </body>
    </html>
    '''

    if __name__ == '__main__':
        print("🛡️ FortiGate Dashboard Starting...")
        app.run(host='0.0.0.0', port=7777, debug=False)
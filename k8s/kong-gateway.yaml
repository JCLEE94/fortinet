apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong-postgres
  namespace: fortinet-msa
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kong-postgres
  template:
    metadata:
      labels:
        app: kong-postgres
    spec:
      containers:
      - name: postgres
        image: postgres:13
        env:
        - name: POSTGRES_DB
          value: "kong"
        - name: POSTGRES_USER
          value: "kong"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kong-postgres-secret
              key: KONG_PG_PASSWORD
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: kong-postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: kong-postgres
  namespace: fortinet-msa
spec:
  selector:
    app: kong-postgres
  ports:
  - port: 5432
    targetPort: 5432
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kong-postgres-pvc
  namespace: fortinet-msa
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: batch/v1
kind: Job
metadata:
  name: kong-migrations
  namespace: fortinet-msa
spec:
  template:
    spec:
      containers:
      - name: kong-migrations
        image: kong/kong-gateway:3.4.0
        command: ["kong", "migrations", "bootstrap"]
        envFrom:
        - configMapRef:
            name: kong-config
        env:
        - name: KONG_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kong-postgres-secret
              key: KONG_PG_PASSWORD
      restartPolicy: OnFailure
  backoffLimit: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong
  namespace: fortinet-msa
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kong
  template:
    metadata:
      labels:
        app: kong
    spec:
      containers:
      - name: kong
        image: kong/kong-gateway:3.4.0
        envFrom:
        - configMapRef:
            name: kong-config
        env:
        - name: KONG_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kong-postgres-secret
              key: KONG_PG_PASSWORD
        ports:
        - containerPort: 8000
          name: proxy
        - containerPort: 8001
          name: admin
        - containerPort: 8002
          name: admin-gui
        livenessProbe:
          httpGet:
            path: /status
            port: 8001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /status
            port: 8001
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: kong-proxy
  namespace: fortinet-msa
spec:
  type: NodePort
  selector:
    app: kong
  ports:
  - name: proxy
    port: 8000
    targetPort: 8000
    nodePort: 30800
---
apiVersion: v1
kind: Service
metadata:
  name: kong-admin
  namespace: fortinet-msa
spec:
  type: ClusterIP
  selector:
    app: kong
  ports:
  - name: admin
    port: 8001
    targetPort: 8001
  - name: admin-gui
    port: 8002
    targetPort: 8002
---
apiVersion: v1
kind: Service
metadata:
  name: kong-admin-gui
  namespace: fortinet-msa
spec:
  type: NodePort
  selector:
    app: kong
  ports:
  - name: admin-gui
    port: 8002
    targetPort: 8002
    nodePort: 30802
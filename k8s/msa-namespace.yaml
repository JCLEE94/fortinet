apiVersion: v1
kind: Namespace
metadata:
  name: fortinet-msa
  labels:
    name: fortinet-msa
    app: fortinet
    architecture: microservices
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kong-config
  namespace: fortinet-msa
data:
  KONG_DATABASE: "postgres"
  KONG_PG_HOST: "kong-postgres"
  KONG_PG_USER: "kong"
  KONG_PG_DATABASE: "kong"
  KONG_PROXY_ACCESS_LOG: "/dev/stdout"
  KONG_ADMIN_ACCESS_LOG: "/dev/stdout"
  KONG_PROXY_ERROR_LOG: "/dev/stderr"
  KONG_ADMIN_ERROR_LOG: "/dev/stderr"
  KONG_ADMIN_LISTEN: "0.0.0.0:8001"
---
apiVersion: v1
kind: Secret
metadata:
  name: kong-postgres-secret
  namespace: fortinet-msa
type: Opaque
data:
  KONG_PG_PASSWORD: a29uZ3Bhc3M=  # kongpass in base64
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq-config
  namespace: fortinet-msa
data:
  RABBITMQ_DEFAULT_USER: "fortinet"
  enabled_plugins: |
    [rabbitmq_management,rabbitmq_prometheus].
---
apiVersion: v1
kind: Secret
metadata:
  name: rabbitmq-secret
  namespace: fortinet-msa
type: Opaque
data:
  RABBITMQ_DEFAULT_PASS: Zm9ydGluZXQxMjM=  # fortinet123 in base64
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: service-discovery-config
  namespace: fortinet-msa
data:
  services.json: |
    {
      "services": {
        "auth-service": {
          "host": "auth-service",
          "port": 8081,
          "health_endpoint": "/health"
        },
        "fortimanager-service": {
          "host": "fortimanager-service", 
          "port": 8082,
          "health_endpoint": "/health"
        },
        "itsm-service": {
          "host": "itsm-service",
          "port": 8083,
          "health_endpoint": "/health"
        },
        "monitoring-service": {
          "host": "monitoring-service",
          "port": 8084,
          "health_endpoint": "/health"
        },
        "security-service": {
          "host": "security-service",
          "port": 8085,
          "health_endpoint": "/health"
        },
        "analysis-service": {
          "host": "analysis-service",
          "port": 8086,
          "health_endpoint": "/health"
        },
        "config-service": {
          "host": "config-service",
          "port": 8087,
          "health_endpoint": "/health"
        }
      }
    }
# =============================================================================
# FortiGate Nextrade - 통합 Docker Compose 구성
# 단일 컨테이너 배포 + 명명된 볼륨 사용
# =============================================================================

version: '3.8'

services:
  # 메인 애플리케이션 컨테이너
  fortinet:
    image: ${DOCKER_REGISTRY:-registry.jclee.me}/${DOCKER_IMAGE_NAME:-fortinet}:${DOCKER_TAG:-latest}
    container_name: ${CONTAINER_NAME:-fortinet}
    hostname: ${HOSTNAME:-fortinet}
    restart: unless-stopped
    
    ports:
      - "${WEB_APP_PORT:-7777}:${WEB_APP_PORT:-7777}"
      - "${WEBSOCKET_PORT:-8765}:${WEBSOCKET_PORT:-8765}"
      - "${METRICS_PORT:-9090}:${METRICS_PORT:-9090}"
    
    environment:
      # 애플리케이션 설정
      - APP_MODE=${APP_MODE:-production}
      - DEBUG=${DEBUG:-false}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - WEB_APP_HOST=${WEB_APP_HOST:-0.0.0.0}
      - WEB_APP_PORT=${WEB_APP_PORT:-7777}
      
      # FortiGate 설정
      - FORTIGATE_HOST=${FORTIGATE_HOST}
      - FORTIGATE_PORT=${FORTIGATE_PORT:-443}
      - FORTIGATE_API_TOKEN=${FORTIGATE_API_TOKEN}
      - FORTIGATE_VERIFY_SSL=${FORTIGATE_VERIFY_SSL:-false}
      
      # FortiManager 설정
      - FORTIMANAGER_HOST=${FORTIMANAGER_HOST}
      - FORTIMANAGER_PORT=${FORTIMANAGER_PORT:-541}
      - FORTIMANAGER_USERNAME=${FORTIMANAGER_USERNAME}
      - FORTIMANAGER_PASSWORD=${FORTIMANAGER_PASSWORD}
      - FORTIMANAGER_VERIFY_SSL=${FORTIMANAGER_VERIFY_SSL:-false}
      - FORTIMANAGER_DEFAULT_ADOM=${FORTIMANAGER_DEFAULT_ADOM:-root}
      
      # 성능 설정
      - WORKERS=${WORKERS:-4}
      - WORKER_CLASS=${WORKER_CLASS:-gevent}
      - WORKER_CONNECTIONS=${WORKER_CONNECTIONS:-1000}
      - MAX_REQUESTS=${MAX_REQUESTS:-1000}
      - TIMEOUT=${TIMEOUT:-120}
      
      # 보안 설정
      - SECRET_KEY=${SECRET_KEY:-change-this-secure-key}
      - INTERNAL_NETWORKS=${INTERNAL_NETWORKS:-192.168.0.0/16,172.16.0.0/12,10.0.0.0/8}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
    
    # 명명된 Docker 볼륨 사용 (바인드 마운트 제거)
    volumes:
      - fortinet-data:/app/data:rw
      - fortinet-logs:/app/logs:rw
      - fortinet-temp:/app/temp:rw
      - fortinet-config:/app/config:rw
      - fortinet-cache:/app/cache:rw
      - fortinet-static:/app/static:ro
      - fortinet-uploads:/app/uploads:rw
    
    networks:
      - fortinet-network
    
    # 헬스체크 구성
    healthcheck:
      test: ["CMD", "python3", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:${WEB_APP_PORT:-7777}/api/health', timeout=5).read()"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      start_period: ${HEALTH_CHECK_START_PERIOD:-60s}
      retries: ${HEALTH_CHECK_RETRIES:-3}
    
    # 보안 옵션
    security_opt:
      - no-new-privileges:true
    
    
    # 임시 파일 시스템
    tmpfs:
      - /tmp:noexec,nosuid,size=${TMPFS_SIZE:-512m}
    

    # 라벨 (메타데이터)
    labels:
      - "com.fortinet.nextrade.service=app"
      - "com.fortinet.nextrade.environment=${APP_MODE:-production}"
      - "com.fortinet.nextrade.version=${VERSION:-latest}"
      - "com.fortinet.nextrade.managed-by=docker-compose"
      # Watchtower 자동 업데이트 활성화
      - "com.centurylinklabs.watchtower.enable=true"
      - "com.centurylinklabs.watchtower.scope=fortinet-scope"
      # Traefik 통합 (선택사항)
      - "traefik.enable=${TRAEFIK_ENABLE:-false}"
      - "traefik.http.routers.fortinet.rule=Host(`${TRAEFIK_HOST:-fortinet.local}`)"
      - "traefik.http.routers.fortinet.tls=${TRAEFIK_TLS:-false}"
      - "traefik.http.services.fortinet.loadbalancer.server.port=${WEB_APP_PORT:-7777}"

# 네트워크 정의
networks:
  fortinet-network:
    name: ${NETWORK_NAME:-fortinet-network}
    driver: bridge

# 명명된 볼륨 정의 (바인드 마운트 없음)
volumes:
  # 애플리케이션 데이터
  fortinet-data:
    name: ${DATA_VOLUME_NAME:-fortinet-data}
    driver: local
    labels:
      - "com.fortinet.nextrade.volume=data"
      - "com.fortinet.nextrade.description=Application data storage"
      - "com.fortinet.nextrade.backup=daily"

  # 로그 파일
  fortinet-logs:
    name: ${LOGS_VOLUME_NAME:-fortinet-logs}
    driver: local
    labels:
      - "com.fortinet.nextrade.volume=logs"
      - "com.fortinet.nextrade.description=Application logs"
      - "com.fortinet.nextrade.retention=30days"

  # 임시 파일
  fortinet-temp:
    name: ${TEMP_VOLUME_NAME:-fortinet-temp}
    driver: local
    labels:
      - "com.fortinet.nextrade.volume=temp"
      - "com.fortinet.nextrade.description=Temporary files"
      - "com.fortinet.nextrade.cleanup=weekly"

  # 설정 파일
  fortinet-config:
    name: ${CONFIG_VOLUME_NAME:-fortinet-config}
    driver: local
    labels:
      - "com.fortinet.nextrade.volume=config"
      - "com.fortinet.nextrade.description=Configuration files"
      - "com.fortinet.nextrade.backup=daily"

  # 캐시 데이터
  fortinet-cache:
    name: ${CACHE_VOLUME_NAME:-fortinet-cache}
    driver: local
    labels:
      - "com.fortinet.nextrade.volume=cache"
      - "com.fortinet.nextrade.description=Application cache"
      - "com.fortinet.nextrade.cleanup=monthly"

  # 정적 파일
  fortinet-static:
    name: ${STATIC_VOLUME_NAME:-fortinet-static}
    driver: local
    labels:
      - "com.fortinet.nextrade.volume=static"
      - "com.fortinet.nextrade.description=Static assets"
      - "com.fortinet.nextrade.readonly=true"

  # 업로드 파일
  fortinet-uploads:
    name: ${UPLOADS_VOLUME_NAME:-fortinet-uploads}
    driver: local
    labels:
      - "com.fortinet.nextrade.volume=uploads"
      - "com.fortinet.nextrade.description=User uploaded files"
      - "com.fortinet.nextrade.backup=daily"